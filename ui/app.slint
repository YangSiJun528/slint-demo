import { VerticalBox, ScrollView } from "std-widgets.slint";

export enum ItemType {
    File,
    Directory
}

export struct FileItem {
    name: string,
    type: ItemType,
}

component RowFile inherits Rectangle {
    in property <FileItem> item;

    height: 32px;
    background: touch.has-hover ? #f0f0f0 : transparent;

    HorizontalLayout {
        padding: 8px;
        spacing: 8px;

        // Icon
        Rectangle {
            width: 16px;
            height: 16px;

            if item.type == ItemType.Directory : Rectangle {
                background: #4a90e2;
                border-radius: 2px;
            }

            if item.type == ItemType.File : Rectangle {
                background: #e0e0e0;
                border-radius: 2px;
                border-width: 1px;
                border-color: #999;
            }
        }

        Text {
            text: item.name;
            vertical-alignment: center;
        }
    }

    touch := TouchArea {}
}

component Column inherits Rectangle {
    in property <[FileItem]> items;

    preferred-width: 200px;
    width: 150px;
    background: white;
    border-width: 1px;
    border-color: #ccc;

    ScrollView {
        VerticalBox {
            padding: 0px;
            spacing: 0px;

            for item in items : RowFile {
                item: item;
            }
        }
    }
}

export component ColumnView inherits Window {
    title: "Column View";
    min-width: 300px;
    min-height: 100px;

    in property <[[FileItem]]> column-data: [];
    in property <length> column-width: 200px;

    VerticalLayout {
        padding: 0px;
        spacing: 0px;

        // 메인 컬럼 뷰 영역
        Rectangle {
            background: #f5f5f5; // 빈 공간을 위한 배경색
            height: 100%;

            ScrollView {
                width: 100%;
                height: 100%;

                vertical-scrollbar-policy: always-off;
                horizontal-scrollbar-policy: as-needed;

                HorizontalLayout {
                    spacing: 0px;
                    padding: 0px;

                    // 실제 데이터가 있는 컬럼만 표시
                    for column-items in column-data : Column {
                        preferred-width: column-width;
                        min-width: column-width;
                        height: 100%;
                        items: column-items;
                    }
                }
            }
        }

        // 하단 정보 표시 영역
        Rectangle {
            height: 120px;
            background: #2d3748;

            VerticalLayout {
                padding: 12px;
                spacing: 8px;

                Text {
                    color: white;
                    text: "선택한 항목 정보";
                    font-size: 16px;
                    font-weight: 600;
                }

                Rectangle {
                    height: 1px;
                    background: #4a5568;
                }

                Text {
                    color: #e2e8f0;
                    text: "항목을 선택하면 여기에 상세 정보가 표시됩니다.";
                    font-size: 14px;
                }

                // 추가 정보 표시를 위한 공간
                HorizontalLayout {
                    spacing: 20px;
                    Rectangle {
                        width: 24px;
                        height: 24px;
                        background: #4a90e2;
                        border-radius: 4px;
                    }
                    Text {
                        color: #e2e8f0;
                        text: "파일 유형: -";
                        font-size: 14px;
                    }
                    Text {
                        color: #e2e8f0;
                        text: "크기: -";
                        font-size: 14px;
                    }
                    Text {
                        color: #e2e8f0;
                        text: "수정 날짜: -";
                        font-size: 14px;
                    }
                }
            }
        }
    }
}

// Example usage
export component Example inherits ColumnView {
    title: "Column View Example";

    column-data: [
        [
            { name: "Documents", type: ItemType.Directory },
            { name: "Pictures", type: ItemType.Directory },
            { name: "Music", type: ItemType.Directory },
            { name: "readme.txt", type: ItemType.File },
            { name: "config.json", type: ItemType.File },
        ],
        [
            { name: "Work", type: ItemType.Directory },
            { name: "Personal", type: ItemType.Directory },
            { name: "report.pdf", type: ItemType.File },
            { name: "notes.md", type: ItemType.File },
        ],
        [
            { name: "Project1", type: ItemType.Directory },
            { name: "Project2", type: ItemType.Directory },
            { name: "main.rs", type: ItemType.File },
            { name: "lib.rs", type: ItemType.File },
            { name: "Cargo.toml", type: ItemType.File },
        ],
    ];
}
