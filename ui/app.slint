import { VerticalBox, ScrollView } from "std-widgets.slint";

export enum ItemType {
    File,
    Directory
}

export struct FileItem {
    name: string,
    type: ItemType,
}

component RowFile inherits Rectangle {
    in property <FileItem> item;

    height: 32px;
    background: touch.has-hover ? #f0f0f0 : transparent;

    HorizontalLayout {
        padding: 8px;
        spacing: 8px;

        // Icon
        Rectangle {
            width: 16px;
            height: 16px;

            if item.type == ItemType.Directory : Rectangle {
                background: #4a90e2;
                border-radius: 2px;
            }

            if item.type == ItemType.File : Rectangle {
                background: #e0e0e0;
                border-radius: 2px;
                border-width: 1px;
                border-color: #999;
            }
        }

        Text {
            text: item.name;
            vertical-alignment: center;
        }
    }

    touch := TouchArea {}
}

component Column inherits Rectangle {
    in property <[FileItem]> items;

    preferred-width: 200px;
    min-width: 150px;
    background: white;
    border-width: 1px;
    border-color: #ccc;

    ScrollView {
        VerticalBox {
            padding: 0px;
            spacing: 0px;

            for item in items : RowFile {
                item: item;
            }
        }
    }
}

export component ColumnView inherits Window {
    title: "Column View";
    min-width: 600px;
    min-height: 400px;

    in property <[[FileItem]]> column-data: [];
    in property <length> column-width: 200px;

    // 실제 데이터가 있는 컬럼 수와 화면에 보여야 할 최소 컬럼 수 중 큰 값
    property <int> visible-columns: max(
        column-data.length,
        floor(root.width / column-width) + 1
    );

    HorizontalLayout {
        padding: 0px;
        spacing: 0px;

        ScrollView {
            width: 100%;
            height: 100%;

            vertical-scrollbar-policy: always-off;
            horizontal-scrollbar-policy: as-needed;

            HorizontalLayout {
                spacing: 0px;
                padding: 0px;

                for idx in visible-columns : Column {
                    preferred-width: column-width;
                    min-width: column-width;
                    height: 100%;
                    items: idx < column-data.length ? column-data[idx] : [];
                }
            }
        }
    }
}

// Example usage
export component Example inherits ColumnView {
    title: "Column View Example";

    column-data: [
        [
            { name: "Documents", type: ItemType.Directory },
            { name: "Pictures", type: ItemType.Directory },
            { name: "Music", type: ItemType.Directory },
            { name: "readme.txt", type: ItemType.File },
            { name: "config.json", type: ItemType.File },
        ],
        [
            { name: "Work", type: ItemType.Directory },
            { name: "Personal", type: ItemType.Directory },
            { name: "report.pdf", type: ItemType.File },
            { name: "notes.md", type: ItemType.File },
        ],
        [
            { name: "Project1", type: ItemType.Directory },
            { name: "Project2", type: ItemType.Directory },
            { name: "main.rs", type: ItemType.File },
            { name: "lib.rs", type: ItemType.File },
            { name: "Cargo.toml", type: ItemType.File },
        ],
    ];
}
